//
// Generated file, do not edit! Created by nedtool 5.6 from MacPacket.msg.
//

#ifndef __MACPACKET_M_H
#define __MACPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "MacPacketType_m.h"
// }}

/**
 * Class generated from <tt>MacPacket.msg:8</tt> by nedtool.
 * <pre>
 * packet MacPacket
 * {
 *     int receiverAddress;
 *     int transmitterAddress;
 *     int macPacketType \@enum(MacPacketType);
 * }
 * </pre>
 */
class MacPacket : public ::omnetpp::cPacket
{
  protected:
    int receiverAddress;
    int transmitterAddress;
    int macPacketType;

  private:
    void copy(const MacPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MacPacket&);

  public:
    MacPacket(const char *name=nullptr, short kind=0);
    MacPacket(const MacPacket& other);
    virtual ~MacPacket();
    MacPacket& operator=(const MacPacket& other);
    virtual MacPacket *dup() const override {return new MacPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getReceiverAddress() const;
    virtual void setReceiverAddress(int receiverAddress);
    virtual int getTransmitterAddress() const;
    virtual void setTransmitterAddress(int transmitterAddress);
    virtual int getMacPacketType() const;
    virtual void setMacPacketType(int macPacketType);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MacPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MacPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MACPACKET_M_H

